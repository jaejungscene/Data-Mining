{"ast":null,"code":"import _slicedToArray from \"/home/ljj0512/private/workspace/data-mining/project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ljj0512/private/workspace/data-mining/project/frontend/src/korean/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Transfer, Form, Divider, Input, Table } from \"antd\";\nimport axios from \"axios\";\nimport API_URL from \"../conf/api-url\";\nimport \"./index.css\";\nexport function KoreanBookPage() {\n  var _this = this;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    genres = _useState2[0],\n    setGenres = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    btnActive = _useState4[0],\n    setBtnActive = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    readBook = _useState6[0],\n    setReadBook = _useState6[1];\n  useEffect(function () {\n    setReadBook([\"총,균,쇠\", \"이기적 유전자\"]);\n    axios.get(\"\".concat(API_URL, \"/korean\")).then(function (result) {\n      setGenres(result.data);\n      var temp = result.data[\"reprGenres\"];\n      var activeArray = [];\n      for (var i = 0; i < temp.length; i++) {\n        activeArray.push(false);\n      }\n      setBtnActive(activeArray);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n  function toggleActive(idx) {\n    if (btnActive[idx] === true) {\n      console.log(\"hello\", idx);\n      var newArr = Array.from(btnActive);\n      newArr[idx] = false;\n      setBtnActive(newArr);\n    } else {\n      console.log(\"world\", idx);\n      var _newArr = Array.from(btnActive);\n      _newArr[idx] = true;\n      setBtnActive(_newArr);\n    }\n  }\n  ;\n  var Submit = function Submit(values) {\n    axios.post(\"\".concat(API_URL, \"/korean\"), {\n      selected_genres: values\n    });\n  };\n  var onSearch = function onSearch(inputData) {\n    console.log(inputData);\n  };\n  var columns = [{\n    title: 'Title',\n    dataIndex: 'title'\n  }, {\n    title: 'Author',\n    dataIndex: 'author'\n  }, {\n    title: 'Publisher',\n    dataIndex: 'publisher'\n  }];\n  if (genres === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      loading: \"true\",\n      size: \"large\",\n      style: {\n        fontSize: \"250%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Loading\"));\n  }\n\n  // const data = [\n  // {\n  //     key: '1',\n  //     name: 'John Brown',\n  //     age: 32,\n  //     address: 'New York No. 1 Lake Park',\n  // },\n  // {\n  //     key: '2',\n  //     name: 'Jim Green',\n  //     age: 42,\n  //     address: 'London No. 1 Lake Park',\n  // },\n  // {\n  //     key: '3',\n  //     name: 'Joe Black',\n  //     age: 32,\n  //     address: 'Sidney No. 1 Lake Park',\n  // },\n  // ];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    name: \"user profile\",\n    onFinish: Submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, \"\\uC778\\uC0C1\\uAE4A\\uAC8C \\uC77D\\uC5C8\\uB358 \\uCC45\\uC774 \\uC788\\uB2E4\\uBA74 \\uBC11 \\uAC80\\uC0C9\\uCC3D\\uC5D0 \\uAC80\\uC0C9 \\uD6C4 \\uCD94\\uAC00\\uD574 \\uBCF4\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(Input.Search, {\n    className: \"inputSearch\",\n    size: \"large\",\n    placeholder: \"\\uCC45 \\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uBCF4\\uC138\\uC694!\",\n    allowClear: true,\n    enterButton: true,\n    style: {\n      width: 500\n    },\n    onSearch: onSearch\n    // onClick={()=>onSearch}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, \"\\uC77D\\uC740 \\uCC45 \\uB9AC\\uC2A4\\uD2B8\"), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: readBook,\n    pagination: {\n      pageSize: 50\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mainGenres\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, genres[\"reprGenres\"].map(function (genre, idx) {\n    return /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      shape: \"round\",\n      size: \"large\",\n      ghost: \"true\",\n      className: \"btn\",\n      style: {\n        backgroundColor: btnActive[idx] ? '#1890ff' : '',\n        color: btnActive[idx] ? 'white' : ''\n      },\n      onClick: function onClick() {\n        return toggleActive(idx);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, genre);\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"transfer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Transfer, {\n    dataSource: genres[\"othersGenres\"],\n    showSearch: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"names":["React","useEffect","useState","Button","Transfer","Form","Divider","Input","Table","axios","API_URL","KoreanBookPage","genres","setGenres","btnActive","setBtnActive","readBook","setReadBook","get","then","result","data","temp","activeArray","i","length","push","catch","error","console","toggleActive","idx","log","newArr","Array","from","Submit","values","post","selected_genres","onSearch","inputData","columns","title","dataIndex","fontSize","width","pageSize","map","genre","backgroundColor","color"],"sources":["/home/ljj0512/private/workspace/data-mining/project/frontend/src/korean/index.js"],"sourcesContent":["import React, { useEffect, useState }  from 'react';\nimport {Button, Transfer, Form, Divider, Input, Table} from \"antd\";\nimport axios from \"axios\";\nimport API_URL from \"../conf/api-url\";\nimport \"./index.css\"\n\nexport function KoreanBookPage(){\n    const [genres, setGenres] = useState(null);\n    const [btnActive, setBtnActive] = useState(null);\n    const [readBook, setReadBook] = useState([]);\n\n    useEffect(()=>{\n        setReadBook([\"총,균,쇠\", \"이기적 유전자\"]);\n        axios\n        .get(`${API_URL}/korean`)\n        .then((result)=>{\n            setGenres(result.data);\n            const temp = result.data[\"reprGenres\"];\n            var activeArray = []\n            for(let i=0; i<temp.length; i++){\n                activeArray.push(false)\n            }\n            setBtnActive(activeArray);\n        })\n        .catch((error)=>{\n            console.error(error);\n        });\n    }, [])\n\n\n    function toggleActive(idx){\n        if(btnActive[idx] === true){\n            console.log(\"hello\",idx);\n            let newArr = Array.from(btnActive);\n            newArr[idx] = false;\n            setBtnActive(newArr);\n        }\n        else{\n            console.log(\"world\",idx);\n            let newArr = Array.from(btnActive);\n            newArr[idx] = true;\n            setBtnActive(newArr);\n        }\n    };\n\n\n    const Submit = (values)=>{\n        axios.post(`${API_URL}/korean`,{\n            selected_genres: values\n        })\n    };\n\n    const onSearch = (inputData)=>{\n        console.log(inputData)\n    }\n\n\n    const columns = [\n        {\n          title: 'Title',\n          dataIndex: 'title',\n        },\n        {\n          title: 'Author',\n          dataIndex: 'author',\n        },\n        {\n          title: 'Publisher',\n          dataIndex: 'publisher',\n        },\n    ];\n\n\n    if (genres === null){\n        return( \n            <div id=\"loading\">\n                <Button\n                    type=\"link\"\n                    loading=\"true\"\n                    size=\"large\"\n                    style={{fontSize:\"250%\"}}\n                >\n                    Loading\n                </Button>\n            </div>\n        )\n    }\n    \n\n\n    // const data = [\n    // {\n    //     key: '1',\n    //     name: 'John Brown',\n    //     age: 32,\n    //     address: 'New York No. 1 Lake Park',\n    // },\n    // {\n    //     key: '2',\n    //     name: 'Jim Green',\n    //     age: 42,\n    //     address: 'London No. 1 Lake Park',\n    // },\n    // {\n    //     key: '3',\n    //     name: 'Joe Black',\n    //     age: 32,\n    //     address: 'Sidney No. 1 Lake Park',\n    // },\n    // ];\n\n\n    \n\n\n    return(\n        <div>\n            <Form name=\"user profile\" onFinish={Submit}>\n                <Form.Item>\n                    <div>\n                        <div>\n                            <h3>인상깊게 읽었던 책이 있다면 밑 검색창에 검색 후 추가해 보세요.</h3>\n                            <Input.Search\n                                className=\"inputSearch\"\n                                size=\"large\"\n                                placeholder='책 제목을 입력해보세요!'\n                                allowClear\n                                enterButton\n                                style={{\n                                    width:500,\n                                }}\n                                onSearch={onSearch}\n                                // onClick={()=>onSearch}\n                            />\n                        </div>\n                        <div>\n                            <h3>읽은 책 리스트</h3>\n                            <Table columns={columns} dataSource={readBook} pagination={{pageSize:50}} size=\"small\" />\n                        </div>\n                        {/* {readBook.map((book)=>{\n                            return(\n                                //<p>\n                                <Text>\n                                    {book}{\"\\n\"}\n                                </Text>\n                                //</p>\n                            )\n                        })} */}\n                    </div>\n                </Form.Item>\n                <Divider/>\n                <Form.Item>\n                    <div id=\"mainGenres\">\n                        {genres[\"reprGenres\"].map((genre, idx)=>{\n                            return(\n                                <Button\n                                    type=\"primary\"\n                                    shape=\"round\"\n                                    size=\"large\"\n                                    ghost=\"true\"\n                                    className={\"btn\"}\n                                    style={{\n                                        backgroundColor: btnActive[idx] ? '#1890ff' : '',\n                                        color: btnActive[idx] ? 'white' : '',\n                                    }}\n                                    onClick={()=>toggleActive(idx)}\n                                >\n                                    {genre}\n                                </Button>\n                            );\n                        })}\n                    </div>\n                </Form.Item>\n                <Divider/>\n                <Form.Item>\n                    <div id=\"transfer\">\n                        <Transfer \n                            dataSource={genres[\"othersGenres\"]}\n                            showSearch=\"true\"\n                        />\n                    </div>\n                </Form.Item>\n            </Form>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}